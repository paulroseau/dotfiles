# Environment
export EDITOR="nvim"
export VISUAL="nvim"

# Necessary for packages complaining about Locale in nix cf. https://github.com/NixOS/nix/issues/4829
# For instance it causes issues with nix installed starship which leaves characters when using Tab completion in zsh
# cf. https://stackoverflow.com/questions/19305291/remnant-characters-when-tab-completing-with-zsh
export LC_ALL="C.UTF-8"

export ZSH_PLUGINS_DIR="$HOME/.zsh-plugins"
export NVIM_PLUGINS_DIR="$HOME/.nvim-plugins"

# Nix aware setup
NIX_PROFILE="$HOME/.nix-profile"
if [ -e $NIX_PROFILE/share ]; then export ZSH_PLUGINS_DIR="$NIX_PROFILE/share"; fi
if [ -e $NIX_PROFILE/share/neovim-plugins ]; then export NVIM_PLUGINS_DIR="$NIX_PROFILE/share/neovim-plugins"; fi

# Update PATH through nix-env if present
if [ -e $NIX_PROFILE/etc/profile.d/nix.sh ]; then source $NIX_PROFILE/etc/profile.d/nix.sh; fi

# Prompt
if [ $(command -v starship) ]; then eval "$(starship init zsh)"; fi

# Zoxide
if [ $(command -v zoxide) ]; then eval "$(zoxide init zsh)"; fi

# History
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=$HOME/.zsh_history
setopt HIST_SAVE_NO_DUPS # not so useful since SHARE_HISTORY adds timestamps to each line
setopt SHARE_HISTORY
setopt APPEND_HISTORY

# Aliases
alias diff='diff --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias ls='ls --color=auto'
alias l='ls -CFt'
alias la='ls -At'
alias ll='ls -alFt'

if [ $(command -v bat) ]; then alias cat='bat'; fi
if [ $(command -v rg) ]; then alias grep='rg'; fi

# Default keymap

# Zsh sets keymap to viins if the EDITOR environment variable is set to nvim.
# Because the emulation is not exact, it is better to use default emacs bindings
# and resort to full on nvim if advanced editing is needed (cf. edit-command-line)
bindkey -A emacs main

# Edit current command in editor
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M main '^v' edit-command-line

# Completion

# Configure completion
zstyle ':completion:*' menu select

# Naviagte the completion menu with vi style bindings
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'j' vi-down-line-or-history

# Add zsh completion for nix installed tools
if [ -e $ZSH_PLUGINS_DIR/zsh/site-functions ]; then fpath+=($ZSH_PLUGINS_DIR/zsh/site-functions $fpath); fi

# Init completion
autoload -Uz compinit
compinit

# FZF
FZF_SHELL_DIR="$(dirname $(dirname $(which fzf)))/share/fzf"

if [ -f $FZF_SHELL_DIR/shell/completion.zsh ]; then source $FZF_SHELL_DIR/shell/completion.zsh; fi
if [ -f $FZF_SHELL_DIR/shell/key-bindings.zsh ]; then source $FZF_SHELL_DIR/shell/key-bindings.zsh; fi

# For nix
if [ -f $FZF_SHELL_DIR/completion.zsh ]; then source $FZF_SHELL_DIR/completion.zsh; fi
if [ -f $FZF_SHELL_DIR/key-bindings.zsh ]; then source $FZF_SHELL_DIR/key-bindings.zsh; fi

# Zsh-autosuggestions
if [ -f $ZSH_PLUGINS_DIR/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then source $ZSH_PLUGINS_DIR/zsh-autosuggestions/zsh-autosuggestions.zsh; fi

# Syntax highlighting
if [ -f $ZSH_PLUGINS_DIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then source $ZSH_PLUGINS_DIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh; fi
